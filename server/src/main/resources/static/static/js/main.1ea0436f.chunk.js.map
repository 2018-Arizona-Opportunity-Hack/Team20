{"version":3,"sources":["components/SignupModal.jsx","components/Dashboard.jsx","redux/actions/eventActions.js","App.js","redux/actions/types.js","redux/reducers/index.js","redux/reducers/eventReducer.js","redux/store.js","index.js"],"names":["SignupModal","state","modal","phoneNumValue","toggle","localStorage","getItem","console","log","_this","setState","isPhoneNum","inputPhoneNum","match","isName","inputName","Component","_this2","this","onSubmit","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","values","wrap","_context","prev","next","sleep","phone","name","setItem","alert","stop","_x","apply","arguments","ms","Promise","resolve","setTimeout","AdaptedInput","Input","_ref2","input","rest","meta","valid","objectWithoutProperties","react_default","createElement","assign","Error","_ref3","react_final_form_es","subscription","error","touched","_ref4","_ref4$meta","smooth_ui_es","props","events","length","style","backgroundColor","onClick","reactstrap_es","isOpen","render","_ref5","handleSubmit","submitting","form","pristine","type","component","placeholder","control","justifyContent","disabled","variant","connect","Dashboard","columns","Header","accessor","Cell","volunteers","volunteers_required","alertStatus","percentageFilled","display","color","transition","components_SignupModal","renderStatus","original","react_table_es","defaultPageSize","data","className","sampleUserEventsData","id","time","concat","moment","org_id","App","fetchEvents","Switch","Route","path","mapDispatchToProps","dispatch","payload","combineReducers","undefined","action","toConsumableArray","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1ea0436f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Form, Field } from \"react-final-form\";\nimport {\n  Box,\n  Button,\n  ControlFeedback,\n  FormGroup,\n  Input,\n  Label,\n  Textarea,\n  Typography\n} from \"smooth-ui\";\nimport \"react-table/react-table.css\";\n\nclass SignupModal extends Component {\n  state = {\n    modal: false,\n    phoneNumValue: ''\n  };\n\n  toggle = () => {\n    if (localStorage.getItem('name') && localStorage.getItem('phone')) {\n      console.log('already signed', localStorage.getItem('name'), localStorage.getItem('phone'))\n    }else{\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }\n\n  isPhoneNum = (inputPhoneNum) => {\n    const phoneRegEx = /^[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-/\\s.]?[0-9]{4}$/;\n    if ((inputPhoneNum.match(phoneRegEx))) {\n      return true;\n    }\n    return false;\n  }\n\n  isName = (inputName) => {\n    const lettersRegex = /^[a-zA-Z\\s]+$/;\n    if ((inputName.match(lettersRegex))) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const onSubmit = async values => {\n      await sleep(300);\n      if (!this.isPhoneNum(values.phone)) {\n        alert('Invalid phone number')\n      } else if (!this.isName(values.name)) {\n        alert('Invalid name')\n      }else{\n        localStorage.setItem('name', values.name);\n        localStorage.setItem('phone', values.phone);\n        console.log(values)\n      }\n    };\n\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n    const adapt = Component => ({\n      input,\n      meta: { valid },\n      ...rest\n    }) => <Component {...input} {...rest} />;\n    const AdaptedInput = adapt(Input);\n\n    const Error = ({ name }) => (\n      <Field name={name} subscription={{ error: true, touched: true }}>\n        {({ meta: { touched, error } }) =>\n          touched && error ? (\n            <ControlFeedback valid={!error}>{error}</ControlFeedback>\n          ) : null\n        }\n      </Field>\n    );\n    // const isPhoneNum = inputPhoneNum => ((inputPhoneNum.match(phoneRegEx)) ? null : \"Required\")\n    const required = value => (value ? null : \"Required\");\n    const { events } = this.props;\n    if (events.length) {\n      return (\n        <div>\n          <Button style={{backgroundColor: \"green\"}} onClick={this.toggle}>Volunteer!</Button>\n          <Modal isOpen={this.state.modal} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}>Volunteer Form</ModalHeader>\n            <ModalBody >\n              <Form\n                onSubmit={onSubmit}\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\n                  <form onSubmit={handleSubmit}>\n                    <FormGroup>\n                      <Label>Name</Label>\n                      <Field\n                        name=\"name\"\n                        type=\"text\"\n                        component={AdaptedInput}\n                        placeholder=\"Enter full name\"\n                        control\n                      />\n                      <Error name=\"name\" />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label>Phone Number</Label>\n                      <Field\n                        name=\"phone\"\n                        component={AdaptedInput}\n                        placeholder=\"Enter phone number (e.g. 555-555-5555)\"\n                        control\n                      />\n                      <Error name=\"phone\" />\n                    </FormGroup>\n\n                    <Box justifyContent=\"\">\n                      <Button\n                        type=\"submit\"\n                        disabled={submitting || pristine}\n                        variant=\"primary\"\n                      >\n                        Submit\n          </Button>\n\n                    </Box>\n                  </form>\n                )}\n              />\n            </ModalBody>\n          </Modal>\n        </div>\n      );\n    } else {\n      return <div>Loading...</div>\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  events: state.events,\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupModal);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Progress } from 'reactstrap';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport moment from 'moment';\n\nimport SignupModal from './SignupModal';\n\nclass Dashboard extends Component {\n  \n\n  render() {\n    const { events } = this.props;\n    const renderStatus = (volunteers, volunteers_required) => {\n      let alertStatus;\n      let percentageFilled = (volunteers / volunteers_required * 100);\n      if(percentageFilled === 100){\n        alertStatus = \"#57d500\"\n      }else if(percentageFilled > 0 && percentageFilled < 50){\n        alertStatus = \"#ff2e00\";\n      }else if (percentageFilled >= 50 && percentageFilled <= 100) {\n        alertStatus = \"#ffbf00\";\n      }\n        return (\n          \n          <div style={{display: 'flex', justifyContent: \"space-between\"}}>\n            <span style ={{\n              color: alertStatus ,\n              transition: 'all .3s ease',\n            }}>\n            &#x25cf;&nbsp;&nbsp;\n               <span style={{ color: 'black' }}>{volunteers_required} volunteers needed</span>\n            </span>\n            <SignupModal />\n          </div>\n        ) \n    }\n    // console.log(moment())\n    // console.log(events)\n    const columns = [\n      {\n        Header: 'Name',\n        accessor: 'name' // String-based value accessors!\n      },\n      {\n        Header: 'Time',\n        accessor: 'time' // String-based value accessors!\n      },\n      {\n        Header: 'Status',\n        accessor: 'events', // String-based value accessors!\n        Cell: (props) => renderStatus(props.original.volunteers, props.original.volunteers_required)\n      },\n    ]\n    if (events.length) {\n      return (\n        <div>\n          <ReactTable\n            // showPaginationBottom={false}\n            defaultPageSize={5}\n            data={events}\n            columns={columns}\n            className=\"-striped -highlight\"\n          />\n        </div>\n      );\n    } else {\n      return <div>Loading...</div>\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  events: state.events,\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import {\n  FETCH_EVENTS\n} from './types';\n\nimport axios from 'axios';\nimport moment from 'moment';\n\nlet sampleUserEventsData = [{\n    \"id\": 1,\n    \"name\": \"This is a sample event\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 20,\n    \"volunteers\": 17,\n  },\n  {\n    \"id\": 2,\n    \"name\": \"This is a sample event #2\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 20,\n    \"volunteers\": 19\n  },\n  {\n    \"id\": 3,\n    \"name\": \"This is a sample event #3\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 30,\n    \"volunteers\": 17\n  },\n  {\n    \"id\": 4,\n    \"name\": \"This is a sample event #4\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 40,\n    \"volunteers\": 21\n  },\n  {\n    \"id\": 5,\n    \"name\": \"This is a sample event #5\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 10,\n    \"volunteers\": 4\n  },\n\n  {\n    \"id\": 6,\n    \"name\": \"This is a sample event #6\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 30,\n    \"volunteers\": 27\n  },\n  {\n    \"id\": 7,\n    \"name\": \"This is a sample event #7\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 40,\n    \"volunteers\": 17\n  },\n  {\n    \"id\": 8,\n    \"name\": \"This is a sample event #8\",\n    \"time\": `${new moment()}`,\n    \"org_id\": 1,\n    \"volunteers_required\": 15,\n    \"volunteers\": 8\n  },\n]\n\n\nexport const fetchEvents = () => dispatch => {\n  dispatch({\n    type: FETCH_EVENTS,\n    payload: sampleUserEventsData\n  })\n}\n\n// when backend is up\n// export const fetchEvents = () => dispatch => {\n//   axios.get('')\n//   .then((response)=>{\n//     dispatch({\n//       type: FETCH_EVENTS,\n//       payload: response.data\n//     })\n//   })\n// }","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Dashboard from './components/Dashboard';\n\nimport { fetchEvents } from './redux/actions/eventActions';\n\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.fetchEvents();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path =\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  events: state.events,\n})\n\nconst mapDispatchToProps = {\n  fetchEvents\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const FETCH_EVENTS = 'FETCH_EVENTS';","import { combineReducers } from 'redux';\nimport eventReducer from './eventReducer';\n\nexport default combineReducers({\n  events: eventReducer\n})","import {\n  FETCH_EVENTS\n} from '../actions/types';\n\n\nexport default (state = [], action) => {\n  switch(action.type){\n    case FETCH_EVENTS:\n    return [...state, ...action.payload];\n\n    default:\n    return state;\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer, \n  compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  , document.getElementById('root'));"],"sourceRoot":""}